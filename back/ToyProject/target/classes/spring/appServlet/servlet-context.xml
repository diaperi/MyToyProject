<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 지정된 패키지 이하에 존재하는
		@Component, @Controller, @Service, @Repository를 찾아서 bean으로 생성
	-->
	<context:component-scan base-package="my.toy.project" />
	
	<!-- intnerceptor 작성 -->
	<!-- 모아두는 큰 덩어리를 만들어서 interceptor를 보관하기. -->
	<!--<interceptors>-->
		<!-- interceptor -->
		<!--<interceptor>--> <!-- 요청이 dispatcher Servlet에서 controller에 도달하기 전 || 후에 -->
			<!-- 요청 응답객체 REQ/RESP 를 가로채서 사용할 수 있는 객체이다. -->
			
			<!--  가로챌 요청의 패턴을 지정 -->
			<!--<mapping path="/**" />--> <!-- /**==모든요청 -->
			
			<!-- 인터넵터 역할을 수행 할 클래스를 찾아서 bean으로 등록 -->
			<!--<beans:bean id="BoardTypeInterceptor" class="kh.fin.giboo.common.interceptor.BoardTypeInterceptor" />-->
 
		<!--</interceptor>-->
	<!--</interceptors>-->
	
	
</beans:beans>
